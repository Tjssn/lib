% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/A1_fv.R
\name{fv}
\alias{fv}
\title{fv}
\usage{
fv(
  var,
  data = NULL,
  label = NULL,
  domain = NULL,
  rank = NULL,
  reclass = NULL,
  is_identifier = NULL,
  factor_levels = NULL,
  factor_labels = NULL,
  factor_na = NULL,
  as_factor = NULL
)
}
\arguments{
\item{var}{变量向量或字符型变量名，必填参数。待处理的变量，若为字符型则需通过\code{data}参数指定所在数据框。}

\item{data}{数据框(data.frame)，可选参数。当\code{var}为字符型变量名时，用于指定变量所在的数据框；
若\code{var}为直接传入的向量，则此参数可忽略。}

\item{label}{字符型，可选参数。变量的标签信息，用于展示和说明变量含义。默认值为变量名，
若变量已有"label"属性则优先使用。}

\item{domain}{字符型，可选参数。变量所属的领域或类别，用于变量归类。默认继承变量已有"domain"属性，
若无则为NA。}

\item{rank}{数值型，可选参数。变量的排序权重，用于多变量时的排序依据。默认值为1，
若变量已有"rank"属性则优先使用。}

\item{reclass}{字符型，可选参数。指定变量的目标类型，用于类型转换，可选值包括：
"factor"：转换为因子型；
"ordered"：转换为有序因子型；
"numeric"：转换为数值型；
"character"：转换为字符型。
默认继承变量已有"reclass"属性，若无则使用原始类型的第一个类别。}

\item{is_identifier}{逻辑型，可选参数。标记变量是否为标识符（如ID变量），用于区分关键标识变量。
默认值为FALSE，若变量已有"is_identifier"属性则优先使用。}

\item{factor_levels}{向量，可选参数。指定因子变量的水平顺序，仅当\code{reclass}为"factor"或"ordered"时有效。
默认继承变量已有"factor_levels"属性，若无则使用变量的唯一值。}

\item{factor_labels}{向量，可选参数。指定因子水平的标签，用于替换原始水平的展示名称，
长度需与\code{factor_levels}一致。默认与\code{factor_levels}相同，若变量已有"factor_labels"属性则优先使用。}

\item{factor_na}{标量，可选参数。用于替换因子变量中的NA值，仅当\code{reclass}为"factor"或"ordered"时有效。
默认值为NA，若变量已有"factor_na"属性则优先使用。}

\item{as_factor}{逻辑型，可选参数。控制是否将变量转换为因子型（当\code{reclass}为"character"、"factor"或"ordered"时生效）。
若为TRUE则转换为因子，FALSE则保持字符型（仅对"character"有效）。默认值为TRUE，
若变量已有"as_factor"属性则优先使用。}
}
\value{
带标准化属性的变量向量，其属性包括：
\code{label}: 变量标签；
\code{domain}: 所属领域；
\code{rank}: 排序权重；
\code{reclass}: 目标类型；
\code{is_identifier}: 是否为标识符；
\code{factor_levels}: 因子水平；
\code{factor_labels}: 因子标签；
\code{factor_na}: NA替换值；
\code{as_factor}: 因子转换标记。
}
\description{
对单个变量进行属性管理与类型转换，支持标签设置、领域分类、排序权重、类型重定义、标识符标记，
以及因子变量的精细化处理（水平设置、标签映射、缺失值替换等）。函数会优先使用用户指定的参数，
若无则继承变量已有属性，否则采用默认值，最终返回带有标准化属性的变量，便于后续数据分析与展示。
}
\details{
变量处理流程：\cr
\enumerate{
\item 变量提取：根据\code{var}类型（向量/变量名）提取目标变量；\cr
\item 属性继承：读取变量已有属性，作为参数默认值（用户输入参数优先）；\cr
\item 类型转换：基于\code{reclass}参数进行类型转换，处理可能的转换警告（如非数值转numeric产生NA）；\cr
\item 因子处理：若为因子/有序因子，处理NA值替换、水平与标签设置，检测水平合并情况；\cr
\item 属性更新：将所有参数信息写入变量属性，返回带标准化属性的变量。\cr
}

因子水平合并检测：当\code{factor_labels}中存在重复值时，函数会自动检测并提示哪些原始水平被合并到同一标签，
便于追踪因子水平的聚合情况。
}
\note{
若\code{reclass}指定为无效类型（不在可选值中），函数会使用变量原始类型并提示警告；\cr
\code{factor_na}仅接受长度为1的值，若输入长度超过1则自动使用NA并提示；\cr
转换为numeric时，非数值型值会被转为NA，函数会提示转换过程中产生的NA数量；\cr
有序因子（ordered）的水平展示使用" < "分隔，普通因子使用" , "分隔。
}
\section{重要提示}{

\strong{⚠️} 函数参数优先级规则：用户传入参数 > 变量已有属性 > 函数内部默认值。
类型转换（\code{reclass}）可能导致数据丢失（如非数值型转为numeric时产生NA），建议检查控制台输出的转换提示；
因子水平设置时，若\code{factor_labels}未指定则自动与\code{factor_levels}保持一致，长度不匹配时会提示警告。
}

\examples{
# 准备工作：创建示例数据
set.seed(123)
age <- c(25, 30, 35, NA, 40)
gender <- c(1, 2, 1, 2, 1)

# 示例1：基础使用，处理年龄变量
age_processed <- fv(var = age)
# 查看处理后的变量及属性
age_processed
attributes(age_processed)

# 示例2：指定标签、重分类为numeric
age_processed2 <- fv(
  var = age,
  label = "年龄(岁)",
  reclass = "numeric"
)
attributes(age_processed2)$label  # 查看标签
class(age_processed2)  # 查看类型

# 示例3：处理因子变量（性别）
gender_processed <- fv(
  var = gender,
  label = "性别",
  reclass = "factor",
  factor_levels = c(1, 2),
  factor_labels = c("男", "女"),
  factor_na = 99  # 假设用99替换NA
)
gender_processed  # 查看转换后的因子
attributes(gender_processed)$factor_labels  # 查看因子标签

# 示例4：从数据框中处理变量
df <- data.frame(id = 1:5, score = c("85", "90", "NA", "75", "80"))
# 处理分数变量：转为numeric，设置标签
df$score <- fv(
  var = "score",
  data = df,
  label = "考试分数",
  reclass = "numeric"
)
df$score  # 查看处理后的分数（注意NA值）

}
\author{
开发团队:Tjssn;\cr
联系方式:tongjibbb@163.com;\cr
官方网址:\url{https://study.tjbbb.com};\cr
微信:Tongjissn;\cr
官方平台-公众号:统计碎碎念
}
