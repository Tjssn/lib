% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/A3_filterfv.R
\name{filterfv}
\alias{filterfv}
\title{基于fv汇总数据筛选变量}
\usage{
filterfv(data, condition, getvar = "var_name", fv_data = NULL)
}
\arguments{
\item{data}{数据框(data.frame)或tibble，可选参数。原始数据集，仅当getvar='data.frame'且未提供fv_data时必需，
用于生成汇总数据或提取符合条件的变量子集。}

\item{condition}{字符型，必填参数。筛选条件，基于getfv汇总数据的列构建的逻辑表达式字符串，
如'domain == "demographic"'、'reclass == "factor"'或'label \%like\% "年龄"'。}

\item{getvar}{字符型，可选参数。指定返回结果的类型，默认为"var_name"。
若为"data.frame"，返回原始数据中符合条件的变量子集；
若为汇总数据中的列名（如"var_name"、"label"），则返回该列的去重向量。}

\item{fv_data}{数据框(data.frame)，可选参数。由getfv()生成的汇总数据，若已提前计算可直接传入以提高效率，
若未提供则自动基于data生成。}
}
\value{
若getvar="data.frame"，返回原始数据中符合条件的变量子集（数据框）；
若getvar为汇总数据的列名，返回该列的去重向量；
若无符合条件的记录或有效变量，返回NULL并提示信息。
}
\description{
该函数用于根据指定条件筛选由getfv()生成的汇总数据，并可返回原始数据中符合条件的变量子集，
或直接提取汇总数据中的指定列信息，方便快速筛选和提取经过fv()处理的变量。
}
\section{重要提示}{

\strong{⚠️} condition必须是单个字符串形式的逻辑表达式，且只能使用getfv汇总数据中存在的列名；
当getvar="data.frame"时，会自动检查变量在原始数据中的存在性，忽略不存在的变量；
若提前生成了getfv汇总数据，建议通过fv_data参数传入，避免重复计算。
}

\examples{
# 准备示例数据
df <- data.frame(
  age = c(25, 30, 35, NA, 40),
  gender = c(1, 2, 1, 2, 1),
  score = c("85", "90", "NA", "75", "80")
)

# 先批量处理变量并生成汇总数据
df_processed <- fv_all(df, domain = c("demographic", "demographic", "academic"))
fv_summary <- getfv(df_processed)  # 假设getfv()可生成包含var_name和domain的汇总数据

# 示例1：返回领域为demographic的变量子集
demo_vars <- filterfv(
  data = df_processed,
  condition = 'domain == "demographic"',
  getvar = "data.frame"
)
head(demo_vars)

# 示例2：提取因子型变量的名称（假设汇总数据有reclass列）
factor_vars <- filterfv(
  fv_data = fv_summary,
  condition = 'reclass == "factor"',
  getvar = "var_name"
)
factor_vars

# 示例3：直接使用条件筛选并返回标签信息
age_labels <- filterfv(
  data = df_processed,
  condition = 'var_name == "age"',
  getvar = "label"
)
age_labels

}
